name: Deployment

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  ci:
    runs-on: [ ci ]

    strategy:
      matrix:
        os: [ ubuntu 18.04 ]
        node: [ 16 ]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Upgrade NPM
        run: npm install -g npm

      - name: Install dependencies
        run: npm ci

      - name: Run code style check
        run: npm run style:all

  analyse:
    name: Code analysis
    runs-on: [ analyse ]
    needs: [ ci ]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install dependencies
        run: npm ci

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  clean-working-directory-ci:
    runs-on: [ ci ]
    needs: [ ci, analyse ]
    if: always()
    steps:
      - name: Clean working directory
        shell: bash
        run: |
          cd $RUNNER_WORKSPACE
          cd ..
          rm -r *

  clean-working-directory-analyse:
    runs-on: [ analyse ]
    needs: [ ci, analyse ]
    if: always()
    steps:
      - name: Clean working directory
        shell: bash
        run: |
          cd $RUNNER_WORKSPACE
          cd ..
          rm -r *